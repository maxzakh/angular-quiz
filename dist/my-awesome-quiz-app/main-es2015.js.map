{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/question-form/question-form.component.ts","./src/app/question-form/question-form.component.html","./src/app/questions.service.ts","./src/app/questions/questions.component.ts","./src/app/questions/questions.component.html","./src/app/quiz.model.ts","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAMnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QAFZ,2EAA+B;;6FAE/B,YAAY;cAJxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,iCAAiC;aAC5C;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACH;AACN;AACQ;AACc;AACW;AACjB;AACA;AACR;AACI;;;AAE3D,MAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,iFAAkB,EAAE;IAClD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE;CACzD,CAAC;AAqBK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;YAC/B,qEAAgB;YAChB,uEAAa;YACb,kEAAmB;YACnB,qEAAa;YACb,yEAAe;SAChB;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,4FAAqB;QACrB,iFAAkB;QAClB,2EAAgB;QAChB,2EAAgB,2EAIhB,qEAAgB;QAChB,uEAAa;QACb,kEAAmB;QACnB,qEAAa;QACb,yEAAe;6FAKN,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,4FAAqB;oBACrB,iFAAkB;oBAClB,2EAAgB;oBAChB,2EAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;oBAC/B,qEAAgB;oBAChB,uEAAa;oBACb,kEAAmB;oBACnB,qEAAa;oBACb,yEAAe;iBAChB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAA;AAAA;AAA+E;AACvB;;;;;ICG5C,wEACI;IAAA,sEACA;IAAA,uEAAM;IAAA,uDAAgB;IAAA,4DAAO;IACjC,4DAAQ;;;IAFgB,0DAAgB;IAAhB,4EAAgB;IAC9B,0DAAgB;IAAhB,gFAAgB;;;IANtC,yEACI;IAAA,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,0EACI;IAAA,yEACI;IAAA,2HACI;IAGR,4DAAM;IACV,4DAAO;IACX,4DAAM;;;IATE,0DAAkB;IAAlB,sFAAkB;IAChB,0DAAkB;IAAlB,kFAAkB;IAET,0DAAuC;IAAvC,4FAAuC;;ADMnD,MAAM,qBAAqB;IANlC;QASY,iBAAY,GAAG,IAAI,0DAAY,EAAU,CAAC;QAYpD,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC;KACF;IAXC,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,MAAM,EAAE,IAAI,0DAAW,EAAE;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;;0FAbU,qBAAqB;qGAArB,qBAAqB;QCVlC,iHACI;;QAD6B,8EAAgB;;6FDUpC,qBAAqB;cANjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAIE,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AEbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGN;AACS;;;AAKvC,MAAM,gBAAgB;IAC3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjC,UAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAClD,0DAAG,CAAC,CAAC,MAAa,EAAE,EAAE;YACpB,OAAO,MAAM,CAAC,GAAG,CACf,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,gDAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,CAC5D,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEM,YAAY,CAAC,QAAgB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,QAAQ,OAAO,CAAC,CAAC,IAAI,CACpD,0DAAG,CAAC,CAAC,MAAa,EAAE,EAAE;YACpB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,oDAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7D,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;gFAnBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAMc;;;;;;;;;ICNhE,oEAAwE;;;;IAIpE,yEACI;IAAA,uFACoB;IAD4C,qWAAqC;IACrG,4DAAoB;IAEpB,4EACuD;IADZ,qUAA6B;IACjB,uDAA2E;IAAA,4DAAS;IAC/I,4DAAM;;;IALiB,0DAA4C;IAA5C,mHAA4C;IAI3D,0DAAkD;IAAlD,yHAAkD;IAAC,0DAA2E;IAA3E,sJAA2E;;;IAGtI,4EAAmE;;;IAAlC,mFAAmB;;;IAVxD,yEAEI;IAAA,oHACI;IAOJ,oIAAqD;IACzD,4DAAM;;;IATqB,0DAAoB;IAApB,qFAAoB;IAQ9B,0DAAmB;IAAnB,oFAAmB;;ADC7B,MAAM,kBAAkB;IAQ7B,yDAAyD;IACzD,YACU,KAAqB,EACrB,gBAAkC;QADlC,UAAK,GAAL,KAAK,CAAgB;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAL5C,gBAAW,GAAG,KAAK,CAAC;IAMjB,CAAC;IAEJ,QAAQ;QACN,4DAA4D;QAC5D,IAAI,CAAC,gBAAgB;aAClB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;aAC/C,SAAS,CAAC,CAAC,SAAS,EAAE,EAAE;YACvB,wBAAwB;YACxB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,mDAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,MAAM,CAAC;IAC1D,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,oBAAoB,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO;SACR;QAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;IACxC,CAAC;;oFA5CU,kBAAkB;kGAAlB,kBAAkB;QCb/B,8GAAkE;QAElE,8GAEI;;QAJC,4FAA0B;QAEb,0DAAiB;QAAjB,+EAAiB;;6FDWtB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,MAAM;IACf,YAAmB,KAAa,EAAS,OAAiB;QAAvC,UAAK,GAAL,KAAK,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAU;IAAG,CAAC;CAC/D;AAEM,MAAM,QAAQ;IACnB,YAAmB,KAAa,EAAS,OAAiB;QAAvC,UAAK,GAAL,KAAK,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAU;IAAG,CAAC;CAC/D;AAEM,MAAM,IAAI;IACf,YAAmB,KAAa,EAAS,IAAY,EAAS,WAAmB,EAAS,QAAgB;QAAvF,UAAK,GAAL,KAAK,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAQ;IAAG,CAAC;CAC/G;AAEM,MAAM,OAAO;IAClB,YAAmB,SAAmB,EAAE;QAArB,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;CAC7C;;;;;;;;;;;;;ACdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;;;;;;;ICG3C,yEACE;IAAA,uDACF;IAAA,4DAAM;;;;IAF+D,wJAAgC;IACnG,0DACF;IADE,sGACF;;ADGC,MAAM,gBAAgB;;gFAAhB,gBAAgB;gGAAhB,gBAAgB;QCR7B,yEACE;QAAA,yEACI;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,4GACE;QAEJ,4DAAM;QACR,4EACE;QAAA,uEAAiD;QAAA,8EAAmB;QAAA,4DAAI;QAC1E,4DAAS;QACX,4DAAM;;QAPoB,0DAAgD;QAAhD,uFAAgD;;6FDK7D,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;kBAEE,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICK1C,sEACI;IAAA,2EACI;IAAA,iFAAgB;IAAA,uDAAW;IAAA,4DAAiB;IAC5C,oFAAmB;IAAA,uDAAiB;IAAA,4DAAoB;IACxD,mFACI;IAAA,4EACI;IAAA,uEAA4B;IAAA,uDAAW;IAAA,4DAAI;IAC/C,4DAAS;IACb,4DAAmB;IACvB,4DAAW;IACf,4DAAM;;;IARkB,0DAAW;IAAX,2EAAW;IACR,0DAAiB;IAAjB,iFAAiB;IAGzB,0DAAwB;IAAxB,sGAAwB;IAAC,0DAAW;IAAX,2EAAW;;ADDxD,MAAM,gBAAgB;IAG3B,YACS,KAAqB,EACrB,gBAAkC;QADlC,UAAK,GAAL,KAAK,CAAgB;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;IACxC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACpD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;;gFAZU,gBAAgB;gGAAhB,gBAAgB;QCV7B,yEACI;QAAA,2EACI;QAAA,oFAA8B;QAAA,8HAAmE;QAAA,4DAAiB;QACtH,4DAAW;QACX,yEACI;QAAA,6GACI;QAUR,4DAAM;QACV,4DAAM;;QAZO,0DAAsB;QAAtB,6EAAsB;;6FDKtB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>',\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { QuestionFormComponent } from './question-form/question-form.component';\nimport { ResultsComponent } from './results/results.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomeComponent },\n  { path: ':quizId', component: QuestionsComponent },\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionFormComponent,\n    QuestionsComponent,\n    ResultsComponent,\n    WelcomeComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    BrowserModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatButtonModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.css'],\n})\n\nexport class QuestionFormComponent implements OnInit {\n\n  @Input() question: Question;\n  @Output() onChoiceMade = new EventEmitter<string>();\n\n  form: FormGroup;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      choice: new FormControl()\n    });\n\n    this.form.valueChanges.subscribe(this.onChange);\n  }\n\n  onChange = () => {\n    this.onChoiceMade.emit(this.form.value.choice);\n  }\n}\n","<div class=\"quiz quiz-container\" *ngIf=\"question\">\n    <h1>{{question.label}}</h1>\n    <form [formGroup]=\"form\">\n        <div class=\"form-group\">\n            <label *ngFor=\"let choice of question.choices\">\n                <input type=\"radio\" [value]=\"choice\" formControlName=\"choice\">\n                <span>{{choice.value}}</span>\n            </label>\n        </div>\n    </form>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Quiz, Question } from './quiz.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionsService {\n  constructor(private http: HttpClient) {}\n\n  public getQuizzes() {\n    return this.http.get(`./assets/quiz-list.json`).pipe(\n      map((result: any[]) => {\n        return result.map(\n          (r) => new Quiz(r.label, r.name, r.description, r.fileName)\n        );\n      })\n    );\n  }\n\n  public getQuestions(fileName: string) {\n    return this.http.get(`./assets/${fileName}.json`).pipe(\n      map((result: any[]) => {\n        return result.map((r) => new Question(r.label, r.choices));\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\n\nimport { QuestionsService } from '../questions.service';\nimport { Quiz, Answers, Choice, Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css'],\n})\nexport class QuestionsComponent implements OnInit {\n  quiz: Quiz;\n  answers: Answers;\n  questions: Question[];\n  currentQuestionIndex: number;\n\n  showResults = false;\n\n  // inject both the active route and the questions service\n  constructor(\n    private route: ActivatedRoute,\n    private questionsService: QuestionsService\n  ) {}\n\n  ngOnInit() {\n    // read from the dynamic route and load the proper quiz data\n    this.questionsService\n      .getQuestions(this.route.snapshot.params.quizId)\n      .subscribe((questions) => {\n        // initialize everything\n        this.questions = questions;\n        this.answers = new Answers();\n        this.currentQuestionIndex = 0;\n      });\n  }\n\n  updateChoice(choice: Choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      this.showResults = true;\n      return;\n    }\n\n    this.currentQuestionIndex++;\n  }\n\n  reset() {\n    this.quiz = undefined;\n    this.questions = undefined;\n    this.answers = undefined;\n    this.currentQuestionIndex = undefined;\n  }\n}\n","<div *ngIf=\"quiz && !questions\" class=\"spinner-grow text-primary\"></div>\n\n<div class=\"quiz\" *ngIf=\"questions\">\n\n    <div class=\"questions\" *ngIf=\"!showResults\">\n        <app-question-form [question]=\"questions[currentQuestionIndex]\" (onChoiceMade)=\"updateChoice($event)\">\n        </app-question-form>\n\n        <button mat-button class=\"btn btn-success\" (click)=\"nextOrViewResults()\"\n            [disabled]=\"!answers.values[currentQuestionIndex]\">{{currentQuestionIndex === questions.length - 1 ? 'View results' : 'Next'}}</button>\n    </div>\n\n    <app-results *ngIf=\"showResults\" [answers]=\"answers\"></app-results>\n</div>","export class Choice {\n    constructor(public value: string, public correct?: boolean) {}\n  }\n  \n  export class Question {\n    constructor(public label: string, public choices: Choice[]) {}\n  }\n  \n  export class Quiz {\n    constructor(public label: string, public name: string, public description: string, public fileName: string) {}\n  }\n  \n  export class Answers {\n    constructor(public values: Choice[] = []) {}\n  }","import { Component, Input } from '@angular/core';\nimport { Answers } from '../quiz.model';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent {\n  @Input() answers: Answers;\n}","<div class=\"quiz-container\">\n  <div class=\"results\">\n      <h2>Results</h2>\n      <div class=\"answer\" *ngFor=\"let a of answers.values; let i = index;\" [ngClass]=\"{correct: a.correct}\">\n        {{i+1}}: {{a.value}}\n      </div>\n    </div>\n  <button mat-button>\n    <a routerLink=\"/welcome\" class=\"btn btn-primary\">Choose another quiz</a>\n  </button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { QuestionsService } from '../questions.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Quiz } from '../quiz.model';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css'],\n})\nexport class WelcomeComponent implements OnInit {\n  quiz: Quiz[];\n\n  constructor(\n    public route: ActivatedRoute,\n    public questionsService: QuestionsService\n  ) {}\n\n  ngOnInit() {\n    this.questionsService.getQuizzes().subscribe((quiz) => {\n      this.quiz = quiz;\n    });\n  }\n}\n","<div class=\"quiz-container\">\n    <mat-card>\n        <mat-card-title class=\"title\">Welcome to my quiz app, please select one of the following options:</mat-card-title>\n    </mat-card>\n    <div class=\"quiz\">\n        <div *ngFor=\"let q of quiz\">\n            <mat-card>\n                <mat-card-title>{{q.label}}</mat-card-title>\n                <mat-card-subtitle>{{q.description}}</mat-card-subtitle>\n                <mat-card-actions>\n                    <button mat-button>\n                        <a routerLink=\"/{{q.name}}\">{{q.label}}</a>\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}